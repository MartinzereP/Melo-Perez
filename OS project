#include <iostream> 
#include "authent.h"
#include <thread>
#include <chrono>
#include "Process.h"
#include <queue>
using namespace std;

int main()
{
    int counter;
    for (int i = 0; i < 5; ++i) {  // Loop to repeat the animation
        cout << "\rLoading   " << flush;  // Print "Loading" with spaces
        this_thread::sleep_for(chrono::milliseconds(500));  // Pause

        cout << "\rLoading.  " << flush;  // Print "Loading."
        this_thread::sleep_for(chrono::milliseconds(500));

        cout << "\rLoading.." << flush;  // Print "Loading.."
        this_thread::sleep_for(chrono::milliseconds(500));

        cout << "\rLoading..." << flush; // Print "Loading..."
        this_thread::sleep_for(chrono::milliseconds(500));

    }

    cout << "\rLoading Complete!      " << endl;  // Clear the line when done

    authen();
    queue<Process> ptest;
    queue <Process> processQ;
    

    while (!processQ.empty()) {
        Process p1(1, 0, 10, 1, 512, true);
        processQ.push(p1);
        
        Process p2(2, 0, 10, 1, 512, true);
        processQ.push(p2);

        Process p3(3, 0, 10, 1, 512, true);
        processQ.push(p3);

        Process I = processQ.front();
        cout << "\nProcess Information:\n";
        I.display();        
        // Simulate process execution

        cout << "\nExecuting process...\n";
        I.updateState("RUNNING");
        I.execution_time(5);
        I.display();

        I.execution_time(5);  // Complete execution
        cout << "\nProcess execution complete.\n";
        I.display();

        

        
        processQ.pop();

    }
    return 0;
}
